import cv2
import numpy as np
cam=cv2.VideoCapture(0,cv2.CAP_DSHOW)

width=640
height=360


def onTrack1(val):
    global hueLow
    hueLow=val
    

def onTrack2(val):
    global hueHigh
    hueHigh=val
    

def onTrack3(val):
    global satLow
    satLow=val
    


def onTrack4(val):
    global satHigh
    satHigh=val
    


def onTrack5(val):
    global valLow
    valLow=val



def onTrack6(val):
    global valHigh
    valHigh=val
    



cam.set(cv2.CAP_PROP_FRAME_WIDTH,width)
cam.set(cv2.CAP_PROP_FRAME_HEIGHT,height)
cam.set(cv2.CAP_PROP_FPS,60)
cam.set(cv2.CAP_PROP_FOURCC,cv2.VideoWriter_fourcc(*'MJPG'))

hueLow=10
hueHigh=20
satLow=10
satHigh=250
valLow=10
valHigh=250

cv2.namedWindow('myTrackbar')
cv2.resizeWindow('myTrackbar',400,400)
cv2.moveWindow('myTrackbar',width,0)
print(height,width)
cv2.createTrackbar('hueLow','myTrackbar',10,179,onTrack1)
cv2.createTrackbar('hueHigh','myTrackbar',20,179,onTrack2)
cv2.createTrackbar('satLow','myTrackbar',10,255,onTrack3)
cv2.createTrackbar('satHigh','myTrackbar',250,255,onTrack4)
cv2.createTrackbar('valLow','myTrackbar',10,255,onTrack5)
cv2.createTrackbar('valHigh','myTrackbar',250,255,onTrack6)
while True:
    ignore, frame=cam.read()
    frameHSV=cv2.cvtColor(frame,cv2.COLOR_BGR2HSV)
    

    lowerBound=np.array([hueLow,satLow,valLow])
    upperBound=np.array([hueHigh,satHigh,valHigh])
    cv2.imshow('myweb_cam',frame)
    cv2.resizeWindow('myweb_cam',width,height)
    cv2.moveWindow('myweb_cam',0,0)
    myMask=cv2.inRange(frameHSV,lowerBound,upperBound)
    myMask=cv2.bitwise_not(myMask)
    smallMask=cv2.resize(myMask,(int(width/2),int(height/2)))
    cv2.imshow('mask',smallMask)
    cv2.moveWindow('mask',0,height)
    objectTracker=cv2.bitwise_and(frame,frame,mask=myMask)
    smallObject=cv2.resize(objectTracker,(int(width/2),int(height/2)))
    cv2.imshow('Object Tracker',smallObject)
    cv2.moveWindow('Object Tracker',int(width/2),height)

  if cv2.waitKey(1) & 0xff ==ord('q'):
        break
cam.release()
    

    

    
    
    
    
   
